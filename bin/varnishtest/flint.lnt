
+libh mgt_event.h

-elib(123)  // size is both a variable and a macro with args
-emacro(736, isnan)  // isnanf
-efile(766, ../../config.h)

-esym(850, av)

-esym(528, svnid)

-e712	// 14      Info    712     Loss of precision (___) (___ to ___)
-e747	// 16      Info    747     Significant prototype coercion (___) ___ to ___



// Fix strchr() semtics, it can only return NULL if arg2 != 0
-sem(strchr, 1p, type(1), 2n == 0 ? (@p < 1p) : (@p < 1p || @p == 0 ))
// 
// -sem(vsb_new, @p == malloc(1))
// -sem(vsb_delete, custodial(1))
-sem(lbv_assert, r_no)
-sem(lbv_xxxassert, r_no)
// -sem(WS_Init, custodial(2))
// -sem(http_Setup, custodial(2))
// 
// -ffc	// No automatic custody
// 
-e763	// Redundant declaration for symbol '...' previously declared
// -e726	// Extraneous comma ignored
// -e728	// Symbol ... not explicitly initialized
-e716	// while(1) ... 
// -e785	// Too few initializers for aggregate 
// -e786	// String concatenation within initializer
// 
-emacro(779, REPLACE)		// string constant !=
-emacro(774, REPLACE)		// if(bool) always true
-emacro(506, REPLACE)		// const bool
// 
// -emacro(506, isnan)	// constant value boolean
// -emacro(747, isnan)	// significant coersion
// -emacro(506, assert)	// constant value boolean
// -emacro(827, assert)	// loop not reachable
// -emacro(774, assert)	// booelan always true
// -emacro(774, HTTPH)	// always false
// 
// // cache.h
// -emacro(506, INCOMPL) // Constant value Boolean
// 
// // cache_center.c
// -efunc(525, CNT_Session)	// Negative indentation from line
// -efunc(525, http_FilterFields)	// Negative indentation from line
// -efunc(539, http_FilterFields)	// Positive indentation from line
// 
// // cache_vcl.c
// -efunc(525, vcl_handlingname)	// Negative indentation from line
// -esym(528, vcl_handlingname)	// Not referenced
// -e641	// Converting enum 'cli_status_e' to int
// 
// // Review all below this line ///////////////////////////////////////////////

-e457 // unprotected write access 
-e459 // unprotected access 
-e458 // unprotected access 
// 
-e732   // Loss of sign (arg. no. 2) (int to unsigned
-e737	// [45]  Loss of sign in promotion from int to unsigned
-e713	// Loss of precision (assignment) (unsigned long long to long long)
-e574	// Signed-unsigned mix with relational
// -e712	// Loss of precision (assignment) (long long to
// -e747	// Significant prototype coercion (arg. no. 2) long
// 
// /*
// 
// -e767	// Macro redef (system queue.h vs ours )
// 
// -e506	// Constant value boolean
// -e818	// Pointer parameter '...' could be declared as pointing to const
// -e774	// Boolean within 'if' always evaluates to False
// -e534	// Ignoring return value of function
// -e557	// unrecog format
// 
// */
