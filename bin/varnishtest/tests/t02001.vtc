varnishtest	"H1->H2 Upgrade"

barrier b1 cond 2

server s1 {
	rxreq
	expect req.url == /noupgrade
	expect req.http.host == foo.bar
	txresp -status 400 -bodylen 10
} -start

varnish v1 -vcl+backend {} -start

varnish v1 -cliok "param.set feature -http2"
varnish v1 -cliok "param.set debug +syncvsl"

client c1 {
	send "GET /noupgrade HTTP/1.1\r\n"
	send "Host: foo.bar\r\n"
	send "Upgrade: h2c\r\n"
	send "HTTP2-Settings: AAMAAABkAAQAAP__\r\n"
	send "\r\n"
	rxresp
	expect resp.status == 400
	expect resp.bodylen == 10
} -run

server s1 {
	rxreq
	expect req.url == /upgrade
	expect req.http.host == foo.bar
	barrier b1 sync
	txresp -status 401 -bodylen 11
} -start

varnish v1 -cliok "param.set feature +http2"

client c1 {
	send "GET /upgrade HTTP/1.1\r\n"
	send "Host: foo.bar\r\n"
	send "Upgrade: h2c\r\n"
	send "HTTP2-Settings: AAMAAABkAAQAAP__\r\n"
	send "\r\n"
	rxresp
	expect resp.status == 101
	expect resp.http.upgrade == h2c
	expect resp.http.connection == Upgrade
	txpri
	stream 0 {
		rxsettings
		txsettings
		txsettings -ack
		rxsettings
		expect settings.ack == true
	} -run
	barrier b1 sync
	stream 1 {
		rxresp
		expect resp.status == 401
		expect resp.bodylen == 11
	} -run
} -run

# Tests temporarily neutered, they are too flakey
#varnish v1 -expect MEMPOOL.req0.live == 0
#varnish v1 -expect MEMPOOL.req1.live == 0
#varnish v1 -expect MEMPOOL.sess0.live == 0
#varnish v1 -expect MEMPOOL.sess1.live == 0
