varnishtest "Test VCL failures"

server s1 {
	rxreq
	txresp
} -start

varnish v1 -vcl+backend {
	import debug;
	sub vcl_recv {
		if (req.http.foo == "pipe") { return(pipe); }
		if (req.http.foo == "pass") { return(pass); }
		if (req.http.foo == "purge") { return(purge); }
		if (req.http.foo == "miss") { return(hash); }
		if (req.http.foo == "bar") {
			return(synth(748));
		}
		if (req.restarts == 0) {
			debug.fail();
			set req.http.not = "Should not happen";
		}
	}
	sub vcl_hash {
		if (req.http.foo == "hash") {
			debug.fail();
			set req.http.not = "Should not happen";
		}
	}
	sub vcl_miss {
		if (req.http.foo == "miss") {
			debug.fail();
			set req.http.not = "Should not happen";
		}
	}
	sub vcl_pipe {
		if (req.http.foo == "pipe") {
			debug.fail();
			set req.http.not = "Should not happen";
		}
	}
	sub vcl_pass {
		if (req.http.foo == "pass") {
			debug.fail();
			set req.http.not = "Should not happen";
		}
	}
	sub vcl_purge {
		if (req.http.foo == "purge") {
			debug.fail();
			set req.http.not = "Should not happen";
		}
	}
	sub vcl_synth {
		if (resp.status == 748) {
			debug.fail();
			set req.http.not = "Should not happen";
		}
		if (req.restarts == 0 && req.http.foo == "foo") {
			return (restart);
		}
	}
} -start

#######################################################################
# Fail in vcl_recv, no handling in vcl_synth

logexpect l1 -v v1 -g raw {
	expect * 1001	VCL_call	"RECV"
	expect 0 1001	Debug		"Forced failure"
	expect 0 1001	VCL_return	"fail"
} -start

client c1 {
	txreq
	rxresp
	expect resp.status == 503
	expect resp.reason == "VCL failed"
} -run

varnish v1 -expect sc_vcl_failure == 1

logexpect l1 -wait

#######################################################################
# Fail in vcl_recv, vcl_synth restarts successfully

logexpect l1 -v v1 -g raw {
	expect * 1003	VCL_call	"RECV"
	expect 0 1003	Debug		"Forced failure"
	expect 0 1003	VCL_return	"fail"
	expect * 1003	VCL_call	"SYNTH"
	expect 0 1003	VCL_return	"restart"
} -start

client c1 {
	txreq -hdr "foo: foo"
	rxresp
	expect resp.status == 200
	expect resp.reason == "OK"
} -run

# NB: This is correct, req->doclose = SC_VCL_FAILURE latches
varnish v1 -expect sc_vcl_failure == 2

logexpect l1 -wait

#######################################################################
# Fail in vcl_synth

logexpect l1 -v v1 -g raw {
	expect * 1007	VCL_call	"SYNTH"
	expect * 1007	Debug		"Forced failure"
	expect 0 1007	VCL_return	"fail"
} -start

client c1 {
	txreq -hdr "foo: bar"
	expect_close
} -run

varnish v1 -expect sc_vcl_failure == 3

logexpect l1 -wait

#######################################################################
# Fail in vcl_hash, no handling in vcl_synth

logexpect l1 -v v1 -g raw {
	expect * 1009	VCL_call	"HASH"
	expect 0 1009	Debug		"Forced failure"
	expect 0 1009	VCL_return	"fail"
} -start

client c1 {
	txreq -hdr "foo: hash"
	rxresp
	expect resp.status == 503
	expect resp.reason == "VCL failed"
} -run

varnish v1 -expect sc_vcl_failure == 4

logexpect l1 -wait

#######################################################################
# Fail in vcl_pipe, no handling in vcl_synth

logexpect l1 -v v1 -g raw {
	expect * 1012	VCL_call	"PIPE"
	expect 0 1012	Debug		"Forced failure"
	expect 0 1012	VCL_return	"fail"
} -start

client c1 {
	txreq -hdr "foo: pipe"
	rxresp
	expect resp.status == 503
	expect resp.reason == "VCL failed"
} -run

varnish v1 -expect sc_vcl_failure == 5

logexpect l1 -wait

#######################################################################
# Fail in vcl_pass, no handling in vcl_synth

logexpect l1 -v v1 -g raw {
	expect * 1014	VCL_call	"PASS"
	expect 0 1014	Debug		"Forced failure"
	expect 0 1014	VCL_return	"fail"
} -start

client c1 {
	txreq -hdr "foo: pass"
	rxresp
	expect resp.status == 503
	expect resp.reason == "VCL failed"
} -run

varnish v1 -expect sc_vcl_failure == 6

logexpect l1 -wait

#######################################################################
# Fail in vcl_purge, no handling in vcl_synth

logexpect l1 -v v1 -g raw {
	expect * 1016	VCL_call	"PURGE"
	expect 0 1016	Debug		"Forced failure"
	expect 0 1016	VCL_return	"fail"
} -start

client c1 {
	txreq -hdr "foo: purge"
	rxresp
	expect resp.status == 503
	expect resp.reason == "VCL failed"
} -run

varnish v1 -expect sc_vcl_failure == 7

logexpect l1 -wait

#######################################################################
# Fail in vcl_miss, no handling in vcl_synth

logexpect l1 -v v1 -g raw {
	expect * 1018	VCL_call	"MISS"
	expect 0 1018	Debug		"Forced failure"
	expect 0 1018	VCL_return	"fail"
} -start

client c1 {
	txreq -url /x -hdr "foo: miss"
	rxresp
	expect resp.status == 503
	expect resp.reason == "VCL failed"
} -run

delay 1

varnish v1 -expect sc_vcl_failure == 8

logexpect l1 -wait

